{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jctol\\\\Documents\\\\GitHub\\\\Project-2\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import { Calendar, dateFnsLocalizer } from 'react-big-calendar';\n// import format from 'date-fns/format';\n// import parse from 'date-fns/parse';\n// import startOfWeek from 'date-fns/startOfWeek';\n// import getDay from 'date-fns/getDay';\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useEffect, useState } from 'react';\n// import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state = { details: [],}\n\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const response = await fetch('/api/events/');\n      const json = await response.json();\n      if (response.ok) {\n        setEvents(json);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"First event \", events[0].title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n/*\r\nconst locales = { \r\n  \"en-US\": require(\"date-fns/locale/en-US\")\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n\r\n\r\n// This is dummy events, we would implement our database to get actual events\r\nconst events = [\r\n  {\r\n    title: \"Big Meeting\",\r\n    allDay: true,\r\n    start: new Date(2023,10,0),\r\n    end: new Date(2023,10,0),\r\n    participants: [],\r\n  },\r\n  {\r\n    title: \"Vacation\",\r\n    start: new Date(2023,9,17),\r\n    end: new Date(2023,9,20),\r\n    participants: [],\r\n    \r\n  },\r\n  {\r\n    title: \"Conference\",\r\n    start: new Date(2023,9,25),\r\n    end: new Date(2023,9,25),\r\n    participants: [],\r\n  },\r\n\r\n]\r\n\r\nfunction CustomEvent({event}){\r\n  const handleParticipants = () => {\r\n    event.participants.push(\"Database time\");\r\n  }\r\n\r\n  return (\r\n    <div className='custom-event'>\r\n      <div>{event.title}</div>\r\n      <div>Participants: {event.participants.length > 0 ? event.participants.join(\", \") : \"No participants yet\"}</div>\r\n      <button onClick={handleParticipants}>Join Event</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\", description: \"\"})\r\n  const [allEvents, setAllEvents] = useState(events)\r\n\r\n  function handleAddEvent() {\r\n    setAllEvents([...allEvents,newEvent])\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>\r\n        Calendar\r\n      </h1>\r\n      <h2>Add New Event</h2>\r\n      <div>\r\n        <input type=\"text\" placeholder='Add Title 255 characters' style={{ width: \"20%\", marginRight: \"10px\"}}\r\n          value={newEvent.title} onChange={(e) => setNewEvent({...newEvent, title: e.target.value})} required maxLength={255}\r\n        />\r\n        <input type=\"text\" placeholder='Add description 600 characters' style={{ width: \"15%\", height: \"75px\", marginRight: \"10px\", justifyContent:\"center\", alignItems:\"flex-start\"}}\r\n          value={newEvent.description} onChange={(e) => setNewEvent({...newEvent, description: e.target.value})} required maxLength={600}\r\n        />\r\n        <DatePicker placeholderText=\"Start Date\" style={{marginRight: \"10px\"}}\r\n        selected={newEvent.start} onChange={(start) => setNewEvent({...newEvent,start})}/>\r\n        <DatePicker placeholderText=\"End Date\"\r\n        selected={newEvent.end} onChange={(end) => setNewEvent({...newEvent,end})}/>\r\n        <button style={{marginTop: \"10px\"}} onClick={handleAddEvent}>Add Event</button>\r\n      </div>\r\n      <Calendar \r\n      localizer={localizer} events={allEvents} \r\n      startAccessor=\"start\" endAccessor=\"end\"\r\n      style={{ height: 500, margin: \"50px\" }} \r\n        components={{ event: CustomEvent}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n*/\n_s(App, \"u/aoUytF7mNSn2WxfejH3k7V0Ok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","events","setEvents","fetchEvents","response","fetch","json","ok","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jctol/Documents/GitHub/Project-2/client/src/App.js"],"sourcesContent":["import './App.css';\r\n// import { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\n// import format from 'date-fns/format';\r\n// import parse from 'date-fns/parse';\r\n// import startOfWeek from 'date-fns/startOfWeek';\r\n// import getDay from 'date-fns/getDay';\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport React, { useEffect, useState } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n// import axios from 'axios';\r\n\r\nfunction App (){\r\n  //state = { details: [],}\r\n   \r\n  const [ events,setEvents ] = useState([])\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n    const response = await fetch ('/api/events/')\r\n    const json = await response.json()\r\n\r\n      if(response.ok){\r\n        setEvents(json)\r\n      }\r\n    }\r\n    fetchEvents()\r\n  },[])\r\n\r\n  return(\r\n    <div>First event {events[0].title}</div>\r\n  )\r\n\r\n}\r\n\r\n\r\n/*\r\nconst locales = { \r\n  \"en-US\": require(\"date-fns/locale/en-US\")\r\n}\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales\r\n})\r\n\r\n\r\n// This is dummy events, we would implement our database to get actual events\r\nconst events = [\r\n  {\r\n    title: \"Big Meeting\",\r\n    allDay: true,\r\n    start: new Date(2023,10,0),\r\n    end: new Date(2023,10,0),\r\n    participants: [],\r\n  },\r\n  {\r\n    title: \"Vacation\",\r\n    start: new Date(2023,9,17),\r\n    end: new Date(2023,9,20),\r\n    participants: [],\r\n    \r\n  },\r\n  {\r\n    title: \"Conference\",\r\n    start: new Date(2023,9,25),\r\n    end: new Date(2023,9,25),\r\n    participants: [],\r\n  },\r\n\r\n]\r\n\r\nfunction CustomEvent({event}){\r\n  const handleParticipants = () => {\r\n    event.participants.push(\"Database time\");\r\n  }\r\n\r\n  return (\r\n    <div className='custom-event'>\r\n      <div>{event.title}</div>\r\n      <div>Participants: {event.participants.length > 0 ? event.participants.join(\", \") : \"No participants yet\"}</div>\r\n      <button onClick={handleParticipants}>Join Event</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  const [newEvent, setNewEvent] = useState({title: \"\", start: \"\", end: \"\", description: \"\"})\r\n  const [allEvents, setAllEvents] = useState(events)\r\n\r\n  function handleAddEvent() {\r\n    setAllEvents([...allEvents,newEvent])\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>\r\n        Calendar\r\n      </h1>\r\n      <h2>Add New Event</h2>\r\n      <div>\r\n        <input type=\"text\" placeholder='Add Title 255 characters' style={{ width: \"20%\", marginRight: \"10px\"}}\r\n          value={newEvent.title} onChange={(e) => setNewEvent({...newEvent, title: e.target.value})} required maxLength={255}\r\n        />\r\n        <input type=\"text\" placeholder='Add description 600 characters' style={{ width: \"15%\", height: \"75px\", marginRight: \"10px\", justifyContent:\"center\", alignItems:\"flex-start\"}}\r\n          value={newEvent.description} onChange={(e) => setNewEvent({...newEvent, description: e.target.value})} required maxLength={600}\r\n        />\r\n        <DatePicker placeholderText=\"Start Date\" style={{marginRight: \"10px\"}}\r\n        selected={newEvent.start} onChange={(start) => setNewEvent({...newEvent,start})}/>\r\n        <DatePicker placeholderText=\"End Date\"\r\n        selected={newEvent.end} onChange={(end) => setNewEvent({...newEvent,end})}/>\r\n        <button style={{marginTop: \"10px\"}} onClick={handleAddEvent}>Add Event</button>\r\n      </div>\r\n      <Calendar \r\n      localizer={localizer} events={allEvents} \r\n      startAccessor=\"start\" endAccessor=\"end\"\r\n      style={{ height: 500, margin: \"50px\" }} \r\n        components={{ event: CustomEvent}}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA,OAAO,mDAAmD;AAC1D,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAO,4CAA4C;AACnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA,MAAM,CAAEC,MAAM,EAACC,SAAS,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAGzCD,SAAS,CAAC,MAAM;IACd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAc,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAEhC,IAAGF,QAAQ,CAACG,EAAE,EAAC;QACbL,SAAS,CAACI,IAAI,CAAC;MACjB;IACF,CAAC;IACDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEL,OAAA;IAAAU,QAAA,GAAK,cb,EAAA,CAzBSD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAyHZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}